version: "3"
name: kmp-shop

services:
  db:
    container_name: kmp-shop-db
    platform: linux/x86_64
    build:
      context: .
      dockerfile: db/Dockerfile
    restart: always
    tty: true
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - ./db/my.cnf:/etc/mysql/my.cnf
    networks:
      - internal

  gradle:
    container_name: kmp-shop-kotlin-build
    restart: no
    tty: true
    build:
      context: .
      dockerfile: gradle/Dockerfile
    command:
      - /bin/bash
      - -c
      - |
        # Update dokka
        rm -rf docs/dokka
        mkdir docs/dokka

        gradle shop:pc:dokkaHtmlMultiModule
        mv shop/pc/build/dokka/htmlMultiModule docs/dokka/pc

        gradle shop:server:dokkaHtmlMultiModule
        mv shop/server/build/dokka/htmlMultiModule docs/dokka/server

        # Build api
        gradle buildFatJar

        # Build shared js package
        gradle packJsPackage

        # Copy base config if not exist
        cp -R -n configuration shop/server/api/build/libs

        # Clone material icons
        rm -rf shop/server/api/build/libs/material-icons
        git clone https://github.com/material-icons/material-icons shop/server/api/build/libs/material-icons
    working_dir: /var/www/src
    volumes:
      - ../:/var/www/src

  node:
    container_name: kmp-shop-js-build
    depends_on:
      gradle:
        condition: service_completed_successfully
    restart: no
    build:
      context: .
      dockerfile: node/Dockerfile
    command:
      - /bin/bash
      - -c
      - |
        cp -rf shared/build/packages/shared*.tgz shop/react/shared.tgz

        npm install -g @pushcorn/hocon-parser

        cd /var/www/src/shop/react/frontend
        parse-hocon package.conf > package.json
        npm update
        npm run build

        cd /var/www/src/shop/react/backend
        parse-hocon package.conf > package.json
        npm update
        npm run build
    working_dir: /var/www/src
    volumes:
      - ../:/var/www/src

  mkdocs:
    container_name: kmp-shop-mkdocs
    depends_on:
      gradle:
        condition: service_completed_successfully
    restart: no
    build:
      context: .
      dockerfile: mkdocs/Dockerfile
    command:
      - /bin/bash
      - -c
      - |
        mkdocs build
    working_dir: /var/www/src
    volumes:
      - ../:/var/www/src

  phpmyadmin:
    container_name: kmp-shop-phpmyadmin
    depends_on:
      db:
        condition: service_started
    image: phpmyadmin
    restart: always
    tty: true
    ports:
      - ${PORT_DB}:80
    environment:
      PMA_HOST: db
      UPLOAD_LIMIT: 25M
    volumes:
      # Phpmyadmin configuration files
      - ./configurations/phpmyadmin/config.inc.php:/etc/phpmyadmin/config.inc.php
      - ./configurations/phpmyadmin/config.secret.inc.php:/etc/phpmyadmin/config.secret.inc.php
    networks:
      - internal

  java:
    container_name: kmp-shop-run
    depends_on:
      gradle:
        condition: service_completed_successfully
      db:
        condition: service_started
    build:
      context: .
      dockerfile: java/Dockerfile
    restart: always
    tty: true
    command: "java -jar shop/server/api/build/libs/shop-api.jar"
    ports:
      - ${PORT_API}:3003
    working_dir: /var/www/src
    volumes:
      - ../:/var/www/src
      # Server configuration files
      - ./configurations/server:/var/www/src/configuration
    networks:
      - internal

  nginx:
    container_name: kmp-shop-nginx
    depends_on:
      java:
        condition: service_started
      node:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: nginx/Dockerfile
    restart: always
    tty: true
    ports:
      - ${PORT_DOCS}:3000
      - ${PORT_WEBSITE}:3001
      - ${PORT_ADMIN_PANEL}:3002
    volumes:
      - ../:/var/www/src
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  kmp-shop-db:
